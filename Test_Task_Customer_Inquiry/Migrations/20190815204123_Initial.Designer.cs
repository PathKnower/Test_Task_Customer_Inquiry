// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Test_Task_Customer_Inquiry.Services;

namespace Test_Task_Customer_Inquiry.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190815204123_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Test_Task_Customer_Inquiry.DataContracts.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("Mobile");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sample@email.com",
                            Mobile = 46843214,
                            Name = "Temp Customer"
                        },
                        new
                        {
                            Id = 2,
                            Email = "anothersample@email.com",
                            Mobile = 125124,
                            Name = "Firstname Lastname"
                        },
                        new
                        {
                            Id = 3,
                            Email = "somemail@mail.com",
                            Mobile = 684321,
                            Name = "Some Customer"
                        });
                });

            modelBuilder.Entity("Test_Task_Customer_Inquiry.DataContracts.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Currency");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1234m,
                            Currency = "USD",
                            CustomerId = 1,
                            Date = new DateTime(2018, 10, 20, 15, 35, 23, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 623m,
                            Currency = "USD",
                            CustomerId = 1,
                            Date = new DateTime(2018, 10, 20, 15, 36, 23, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 5456m,
                            Currency = "RU",
                            CustomerId = 1,
                            Date = new DateTime(2018, 10, 20, 15, 37, 23, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1524m,
                            Currency = "EUR",
                            CustomerId = 1,
                            Date = new DateTime(2018, 10, 20, 15, 38, 23, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1234m,
                            Currency = "USD",
                            CustomerId = 2,
                            Date = new DateTime(2018, 10, 11, 17, 39, 27, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Test_Task_Customer_Inquiry.DataContracts.Transaction", b =>
                {
                    b.HasOne("Test_Task_Customer_Inquiry.DataContracts.Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
